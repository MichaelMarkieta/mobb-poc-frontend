apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "5"
    pipelinesascode.tekton.dev/on-event: push
    pipelinesascode.tekton.dev/on-target-branch: "[refs/heads/main]"
    pipelinesascode.tekton.dev/task: "[git-clone, kaniko, yq, git-cli, github-open-pr]"
  name: pipelinerun-push-production
  namespace: pipelines
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: repo_name
      value: "{{ repo_name }}"
    - name: container_registry
      value: "image-registry.openshift-image-registry.svc.cluster.local:5000"
    - name: github_organization
      value: MichaelMarkieta
    - name: repo_name_ops
      value: "mobb-poc-ops"
    - name: git_auth_secret
      value: "{{ git_auth_secret }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: repo_name
      - name: container_registry
      - name: github_organization
      - name: repo_name_ops
      - name: git_auth_secret
    tasks:
      - name: clone-app-repo
        taskRef:
          kind: ClusterTask
          name: git-clone
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: subdirectory
            value: $(params.repo_name)
          - name: url
            value: https://github.com/$(params.github_organization)/$(params.repo_name)
          - name: revision
            value: $(params.revision)
          - name: depth
            value: "2"
      - name: clone-ops-repo
        taskRef:
          kind: ClusterTask
          name: git-clone
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: subdirectory
            value: $(params.repo_name_ops)
          - name: url
            value: https://github.com/$(params.github_organization)/$(params.repo_name_ops)
          - name: revision
            value: main
      - name: build-and-push-image
        taskRef:
          name: kaniko
          kind: Task
        runAfter:
          - clone-app-repo
        workspaces:
          - name: source
            workspace: source
        params:
          - name: CONTEXT
            value: $(params.repo_name)
          - name: IMAGE
            value: $(params.container_registry)/production/$(params.repo_name):$(params.revision)
      # - name: get-build-commit-sha
      #   taskRef:
      #     kind: ClusterTask
      #     name: git-cli
      #   runAfter:
      #     - clone-app-repo
      #     - clone-ops-repo
      #   workspaces:
      #     - name: source
      #       workspace: source
      #     - name: ssh-directory
      #       workspace: ssh-directory
      #   params:
      #     - name: GIT_USER_NAME
      #       value: "MichaelMarkieta"
      #     - name: GIT_USER_EMAIL
      #       value: "markieta@redhat.com"
      #     - name: GIT_SCRIPT
      #       value: |
      #         set -ex
      #         cd $(params.repo_name)
      #         git config --global --add safe.directory /workspace/source/$(params.repo_name)
      #         git rev-list -n 2 $(params.revision) | tail -n 1 > /workspace/source/sha.txt
      - name: kustomize-image
        taskRef:
          name: yq
          kind: Task
        runAfter:
          - clone-ops-repo
          - build-and-push-image
        workspaces:
          - name: source
            workspace: source
        params:
          - name: image
            value: docker.io/mikefarah/yq:4.35.2
          - name: SCRIPT
            value: |
              #!/usr/bin/env sh
              set -ex
              export REV=`echo $(tasks.build-and-push-image.results.IMAGE_URL) | grep -o '$(params.repo_name):.*' | cut -f 2 -d :`
              cd $(params.repo_name_ops)
              /usr/bin/yq eval -i 'with(.images ; filter(.name == "$(params.repo_name)").[] | .newTag = strenv(REV))' apps/$(params.repo_name)/overlays/production/kustomization.yaml
      - name: checkout-branch
        taskRef:
          kind: ClusterTask
          name: git-cli
        runAfter:
          - kustomize-image
        workspaces:
          - name: source
            workspace: source
          - name: ssh-directory
            workspace: ssh-directory
        params:
          - name: GIT_USER_NAME
            value: "MichaelMarkieta"
          - name: GIT_USER_EMAIL
            value: "markieta@redhat.com"
          - name: GIT_SCRIPT
            value: |
              set -ex
              cd $(params.repo_name_ops)
              git config --global --add safe.directory /workspace/source/$(params.repo_name_ops)
              git remote remove origin
              git remote add origin git@github.com:$(params.github_organization)/$(params.repo_name_ops).git
              git fetch
              git switch -c update-$(params.repo_name)-$(params.revision)
              git add apps/$(params.repo_name)/overlays/$(params.target_branch)/kustomization.yaml
              git commit -m "update $(params.target_branch) triggered by a PR merge https://github.com/$(params.github_organization)/$(params.repo_name)/commit/$(params.revision)"
              git push origin -u update-$(params.repo_name)-$(params.revision)
      - name: open-pr-in-ops-repo
        taskRef:
          name: github-open-pr
          kind: Task
        runAfter:
          - checkout-branch
        workspaces:
          - name: source
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: REPO_FULL_NAME
            value: "$(params.github_organization)/$(params.repo_name_ops)"
          - name: HEAD
            value: update-$(params.repo_name)-$(params.revision)
          - name: BASE
            value: "main"
          - name: BODY
            value: "Update production"
          - name: TITLE
            value: "Update production"
          - name: GITHUB_TOKEN_SECRET_NAME
            value: github
          - name: GITHUB_TOKEN_SECRET_KEY
            value: token
          - name: AUTH_TYPE
            value: Bearer
    workspaces:
      - name: source
      - name: basic-auth
      - name: ssh-directory
  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    - name: basic-auth
      secret:
        secretName: "{{ git_auth_secret }}"
    - name: ssh-directory
      secret:
        secretName: github-ssh
