apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "5"
    pipelinesascode.tekton.dev/on-event: pull_request
    pipelinesascode.tekton.dev/on-target-branch: development
    pipelinesascode.tekton.dev/task: '[git-clone, kaniko]'
  name: pipelinerun-pr-development
  namespace: development-pipelines
spec:
  params:
  - name: repo_url
    value: '{{ repo_url }}'
  - name: revision
    value: '{{ revision }}'
  - name: pull_request_number
    value: '{{ pull_request_number }}'
  - name: target_branch
    value: '{{ target_branch }}'
  - name: source_branch
    value: '{{ source_branch }}'
  - name: repo_name
    value: '{{ repo_name }}'
  - name: container_registry
    value: 'image-registry.openshift-image-registry.svc.cluster.local:5000'
  pipelineSpec:
    params:
    - name: repo_url
    - name: revision
    - name: pull_request_number
    - name: target_branch
    - name: source_branch
    - name: repo_name
    - name: container_registry
    tasks:
    - name: fetch-repository
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
      - name: output
        workspace: source
      - name: basic-auth
        workspace: basic-auth
      params:
      - name: url
        value: $(params.repo_url)
      - name: revision
        value: $(params.revision)
    - name: build-and-push-image
      taskRef:
        name: kaniko
        kind: Task
      runAfter:
        - fetch-repository
      workspaces:
        - name: source
          workspace: source
      params:
        - name: IMAGE
          value: $(params.container_registry)/$(params.target_branch)/$(params.repo_name):$(params.revision)
    - name: stage-pr
      taskRef:
        name: oc-newapp
        kind: Task
      runAfter:
        - build-and-push-image
      workspaces:
        - name: source
          workspace: source
      params:
        - name: IMAGE
          value: $(tasks.build-and-push-image.results.IMAGE_URL)
        - name: APP_NAME
          value: $(params.repo_name)-pull-$(params.pull_request_number)
    workspaces:
    - name: source
    - name: basic-auth
  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: basic-auth
    secret:
      secretName: '{{ git_auth_secret }}'
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: oc-newapp
spec: 
  workspaces:
  - name: source
  params:
    - name: IMAGE
      description: The full registry path of the image to deploy
      type: string
    - name: APP_NAME
      description: The name of the new app to deploy
      type: string
  steps:
    - name: new-app
      image: image-registry.openshift-image-registry.svc.cluster.local:5000/openshift/cli:latest
      workingDir: /workspace/source
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -ex
          ls
          oc new-app --image=$(params.IMAGE) --name=$(params.APP_NAME)
